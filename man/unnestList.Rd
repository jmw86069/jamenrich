% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-base.r
\name{unnestList}
\alias{unnestList}
\title{Un-nest a nested list into a simple list}
\usage{
unnestList(x, unnamedBase = "x", parentName = NULL, sep = ".",
  makeNameFunc = jamba::makeNames, stopClasses = c("dendrogram",
  "data.frame", "matrix"), ...)
}
\arguments{
\item{x}{list potentially containing lists}

\item{unnamedBase}{character value used as a base for naming any
un-named lists, using the format \code{makeNamesFunc(rep(unnamedBase, n))}.}

\item{sep}{character delimiter used between nested list names.}

\item{stopClasses}{vector of classes that should not be un-nested,
useful in case some classes inherit list properties.}

\item{...}{additional arguments are ignored.}

\item{makeNamesFunc}{function that takes a character vector and returns
non-duplicated character vector of equal length. By default it
uses \code{jamba::makeNames()}.}
}
\description{
Un-nest a nested list into a simple list
}
\details{
This function inspects a list, and unlists each entry
resulting in a simple list of non-list entries as a result.
}
\examples{
L <- list(A=letters[1:10], B=list(C=LETTERS[3:9], D=letters[4:11]));
L;
unnestList(L);

# inspect the data using str()
str(L);
str(unnestList(L))

}
\seealso{
Other jam list functions: \code{\link{mergeAllXY}}
}
\concept{jam list functions}
